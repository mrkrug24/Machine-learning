train.py
   - Определение классов сущностей (LABELS): создаётся список классов
   - Инициализация модели: загружается предварительно обученная модель и токенизатор rubert-tiny2
   - Класс Dataset: создаётся класс для загрузки и обработки данных, чтобы подготовить их к обучению
   - Функции для обработки данных:
      - ann_processing обрабатывает .ann файлы с разметкой для извлечения сущностей
      - data_processing комбинирует текст и разметку, готовя их к токенизации и постановке меток
      - load загружает данные из текстовых файлов и преобразует их в формат, подходящий для модели, с метками и позициями сущностей
      - get_labels сопоставляет токены с типами сущностей на основе аннотаций
   - Подготовка DataLoader: данные подаются в DataLoader для пакетной обработки
   - Оптимизация и обучение: обучение модели проводилось с использованием различных оптимизаторв, но лучше всех показал себя `AdamW`
   - Обрезание весов: метод prune.l1_unstructured применяется к линейным и эмбеддинг-слоям, чтобы сделать модель компактнее, удаляя 10% наименьших по весу связей.
   - Сохранение модели: после завершения обучения модель и токенизатор сохраняются для последующего использования

solution.py
   - Класс Dataset: аналогичен классу в train.py
   - Функция get_labels: сопоставляет токены с типами сущностей, формируя позиции и типы предсказанных сущностей
   - Класс Solution:
      - Инициализация: загружаются обученная модель и токенизатор
      - Метод predict: принимает список текстов, предсказывает сущности и возвращает их в виде множества с позициями и типами
      - Функция collate: помогает подготовить данные для предсказания, выполняя паддинг для токенов и масок