PASSWORD_REGEXP
Пароль должен содержать по крайней мере один латинский символ в нижнем регистре: (?=.*[a-z])
Пароль должен содержать по крайней мере один латинский символ в верхнем регистре: (?=.*[a-z])
Пароль должен содержать по крайней мере одну цифру: (?=.*\d)
Пароль не должен содержать двух одинаковых символов подряд: (?!.*(.)\1)
Пароль должен содержать по крайней мере два различных специальных символа: (?=.*([\^\$\%\@\#\&\*\!\?]).*(?!\2)[\^\$\%\@\#\&\*\!\?])
Пароль должен содержать только латинские символы, цифры и специальные символы: [a-zA-Z\d\^\$\%\@\#\&\*\!\?]{8,}



COLOR_REGEXP 
rgb(r, g, b), где «r, g, b» - это комбинация из трёх целых чисел (от 0 до 255) 
rgb\((\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5]),\s?(\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5]),\s?(\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5])\)

rgb(r, g, b), где «r, g, b» - это комбинация из трёх процентных значений (от 0% до 100%), перечисленных через запятую
rgb\((\d|[1-9]\d|100)%,\s?(\d|[1-9]\d|100)%,\s?(\d|[1-9]\d|100)%\)

hex (шестнадцатеричный код цвета, #rrggbb) – это шестизначное представление цвета в RGB пространстве.
Первые две цифры (rr) – представляют собой красное значение, следующие две – зелёное значение (gg), а последние – синее значение (bb).
Перед значениями каналов предшествует символ #. Также допускается сокращённый вид записи – по одной цифре – #rgb
#([\da-fA-F]{3}|[\da-fA-F]{6})

hsl (тон, насыщенность и светлота, hsl(h, s, l)) - записывается похожим на rgb формат образом.
Тон – целое число в диапазоне от 0 до 360, насыщенность и светлота - целочисленные процентные значения
hsl\((\d|[1-9]\d|[12]\d\d|3[0-5]\d|360),\s?(\d|[1-9]\d|100)%,\s?(\d|[1-9]\d|100)%\)



EXPRESSION_REGEXP
Константы:      ?P<constant>pi|e|sqrt2|ln2|ln10
Функции:        ?P<function>sin|cos|tg|ctg|tan|cot|sinh|cosh|th|cth|tanh|coth|ln|lg|log|exp|sqrt|cbrt|abs|sign
Операции:       ?P<operator>\^|\*|\/|\-|\+
Левая скобка:   ?P<left_parenthesis>\(
Правая скобка:  ?P<right_parenthesis>\)
Переменные:     ?P<variable>[a-zA-Z_][a-zA-Z_\d]*
Числа:          ?P<number>\d+\.\d+|\d+



DATES_REGEXP
Числовые даты с днем в начале, месяцы с 31 днем:     (0?[1-9]|[12]\d|3[01])(?P<sep1>[./\-])(01|1|03|3|05|5|07|7|08|8|10|12)(?P=sep1)\d{4}|
Числовые даты с годом в начале, месяцы с 31 днем:    \d{4}(?P<sep2>[./\-])(01|1|03|3|05|5|07|7|08|8|10|12)(?P=sep2)(0?[1-9]|[12]\d|3[01])|
Числовые даты с днем в начале, месяцы с 30 днями:    (0?[1-9]|[12]\d|30)(?P<sep3>[./\-])(04|4|06|6|09|9|11)(?P=sep3)\d{4}|
Числовые даты с годом в начале, месяцы с 30 днями:   \d{4}(?P<sep4>[./\-])(04|4|06|6|09|9|11)(?P=sep4)(0?[1-9]|[12]\d|30)|
Числовые даты с днем в начале, февраль:              (0?[1-9]|[12]\d)(?P<sep5>[./\-])(02|2)(?P=sep5)\d{4}|
Числовые даты с годом в начале, февраль:             \d{4}(?P<sep6>[./\-])(02|2)(?P=sep6)(0?[1-9]|[12]\d)|

Текстовые даты на русском с днем в начале, месяцы с 31 днем:     (0?[1-9]|[12]\d|3[01])\s(января|марта|мая|июля|августа|октября|декабря)\s\d{4}|
Текстовые даты на русском с днем в начале, месяцы с 30 днями:    (0?[1-9]|[12]\d|30)\s(апреля|июня|сентября|ноября)\s\d{4}|
Текстовые даты на русском с днем в начале, февраль:              (0?[1-9]|[12]\d)\s(февраля)\s\d{4}|

Текстовые даты на английском с месяцем в начале:
        (January|March|May|July|August|October|December|Jan|Mar|May|Jul|Aug|Oct|Dec)\s(0?[1-9]|[12]\d|3[01]),\s\d{4}|
        (April|June|September|November|Apr|Jun|Sep|Nov)\s(0?[1-9]|[12]\d|30),\s\d{4}|
        (February|Feb)\s(0?[1-9]|[12]\d),\s\d{4}|
        
Текстовые даты на английском с годом в начале:
        \d{4},\s(January|March|May|July|August|October|December|Jan|Mar|May|Jul|Aug|Oct|Dec)\s(0?[1-9]|[12]\d|3[01])|
        \d{4},\s(April|June|September|November|Apr|Jun|Sep|Nov)\s(0?[1-9]|[12]\d|30)|
        \d{4},\s(February|Feb)\s(0?[1-9]|[12]\d)



PARENTHESIS_REGEXP
Не начинается с закрывающей скобки:                     (?![\)\]\}])
Не заканчивается на открывающую Скобку:                 (?!.*[\(\[\{]$)
Не содержит некорректных последовательностей скобок:    (?!.*(?:\(\]|\(\}|\{\]|\{\)|\[\)|\[\}))
Разрешённые символы:                                    [a-zA-Z\d\s\(\)\[\]\{\}]+$



SENTENCES_REGEXP
Список:                                         [A-ZА-ЯЁ][^\.\!\?]*\:\s*\n*(\n*\s*\d+\.[^\.\n]*\;)(\n\d+\.[^\.\n]*(\;|\.))+
Заголовки:                                      [A-ZА-ЯЁ][^\.\!\?\:]*\:\s*\n
Отдельные предложения в тексте и списке:        (\d+\.\s+)?[A-ZА-ЯЁ][^\.\!\?]*(\.|\!+|\?+|\.{3})
Оценка:                                         \d\s*из\s10\s*



PERSONS_REGEXP
Отрицательная проверка, чтобы не учитывать первые слова в предложении:  (?<![\.\?!]\s)
Имя или фамилия (возможно с дефисом):                                   [A-ZА-ЯЁ][a-zа-яё]+(?:-[A-ZА-ЯЁ][a-zа-яё]+)?
Возможные инициалы:                                                     (?:\s[A-ZА-ЯЁ]\.\s?[A-ZА-ЯЁ]\.)?
Фамилия:                                                                (?:\s[A-ZА-ЯЁ][a-zа-яё]+(?:-[A-ZА-ЯЁ][a-zа-яё]+)*)?



SERIES_REGEXP
Название сериала (name):                                                                                                        <td><h1\s*class="level2"><a\s*class="all"\s*href="\/series\/\d+\/">\s*(?P<name>.+)\s*<\/a>
Общее количество эпизодов в сериале (episodes_count):                                                                           <td\sclass="news"><b>Эпизоды:<\/b><\/td>\s*\n*\s*<td>\s*\n*\s*<table.*>\s*\n*\s*<tr>\s*\n*\s*<td\s*class="news">\s*(?P<episodes_count>\d+)\s*<\/td>
Номер (episode_number), название (episode_name), оригинальное название (episode_original_name), дата выхода (episode_date):     <span.*>Эпизод\s*(?P<episode_number>\d+)\s*<\/span><br\/>\s*\n*\s*<h1.*><b>\s*(?P<episode_name>.+)\s*<\/b><\/h1>\s*\n*\s*(<span.*>\s*(?P<episode_original_name>.*)\s*<\/span>\s*)?<\/td>\s*\n*\s*(<td.*>\s*(?P<episode_date>\d\d?\s*[а-я]*\s*\d{4})\s*<\/td>)?
Номер сезона (season), год (season_year), количество эпизодов (season_episodes):                                                <td\s*class="news"\s*colspan="2".*><h1.*>\s*Сезон\s*(?P<season>\d+)\s*<\/h1>\s*((?P<season_year>\d{4}),)?\s*эпизодов:\s*(?P<season_episodes>\d+)\s*<\/td>